name: CI/CD for Spring Boot with Docker & EC2

on:
  push:
    branches:
      - Docker

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.properties
        run: |
          echo "${{ secrets.APP_PROPERTIES }}" > src/main/resources/application.properties

      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/qw-spring-app:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/qw-spring-app:latest

      - name: Setup SSH Key
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          echo "$EC2_SSH_KEY" | sed 's/\\n/\n/g' > private_key.pem
          chmod 600 private_key.pem

      - name: SSH into EC2 and Deploy Docker Container
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "EC2에 접속 완료"
          
            docker stop qw-app || true
            docker rm qw-app || true
          
            docker pull $DOCKER_USERNAME/qw-spring-app:latest
          
            docker run -d -p 8080:8080 --name qw-app $DOCKER_USERNAME/qw-spring-app:latest
          
            docker ps
          
            echo "Docker Completed"
          EOF
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

